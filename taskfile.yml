version: '3'

dotenv: ['app.env', '.env']

vars:
  MAJOR : 
    sh: echo {{.PROJECT_VERSION}} | cut -d. -f1
  MINOR : 
    sh: echo {{.PROJECT_VERSION}} | cut -d. -f2
  BUILD : 
    sh: echo {{.PROJECT_VERSION}} | cut -d. -f3
  NEW_BUILD : 
    sh: echo $(({{.BUILD}}+1))
  NEW_VERSION : 
    sh: echo {{.MAJOR}}.{{.MINOR}}.{{.NEW_BUILD}}
  PROJECT_NAME_LOW:
    sh: echo {{.PROJECT_NAME}} | tr A-Z a-z

tasks:
  swagger:
    cmds:
      - swag init -g internal/app/app.go --exclude vendor --exclude ./

  build:
    deps: ['update_version', 'swagger'] 
    cmds:
      - GOOS=windows CGO_ENABLED=0 go build -ldflags "-s -w -X main.Name={{.PROJECT_NAME}} -X main.AppVersion={{.NEW_VERSION}}" -trimpath -o ./bin/{{.PROJECT_NAME}}.exe {{.PROJECT_PATH}}

  update_version:
    cmds:
      - update_env -f app.env -p PROJECT_VERSION -v {{.NEW_VERSION}}
      - echo {{.PROJECT_NAME}} {{.NEW_VERSION}}

  upx:
    deps: ['update_version', 'build']
    cmds:
      - 'if [ "{{.OS}}" = "Windows_NT" ]; then upx.exe ./bin/{{.PROJECT_NAME}}.exe; else upx ./bin/{{.PROJECT_NAME}}; fi'

  test:
    cmds:
      - 'go test ./...'

  lint:
    cmds:
      - 'golangci-lint run'

  docker:
    cmds:
      - 'docker build --build-arg PROJECT_NAME={{.PROJECT_NAME}} --build-arg PROJECT_VERSION={{.NEW_VERSION}} --build-arg PORT={{.PORT}} -f deploy/robin/Dockerfile -t {{.PROJECT_NAME_LOW}} .'
      - 'docker build -f deploy/clickhouse/Dockerfile -t robin-clickhouse .'

  deploy:
    # deps: ['undeploy']
    cmds:
      - 'PROJECT_NAME={{.PROJECT_NAME}} PROJECT_VERSION={{.NEW_VERSION}} PORT={{.PORT}} docker-compose -f ./deploy/docker-compose.dev.yml up -d'

  deploy_prod:
    deps: ['undeploy', 'docker']
    cmds:
      - 'PROJECT_VERSION={{.NEW_VERSION}} docker-compose -f ./deploy/docker-compose.prod.yml up -d'
      - 'xcopy x:\go\robin2\deploy\docker-compose.prod.yml x:\docker\containers'
      - 'xcopy x:\go\robin2\deploy\ch_runner x:\docker\containers\ch_runner'
      - 'docker save -o x:\docker\containers\{{.PROJECT_NAME_LOW}}.tar {{.PROJECT_NAME_LOW}}:latest'
      - 'docker save -o x:\docker\containers\robin-clickhouse.tar robin-clickhouse'

  undeploy:
    cmds:
      - 'docker-compose -f ./deploy/docker-compose.prod.yml down'
      - 'docker rmi robin-clickhouse'
      - 'docker rmi {{.PROJECT_NAME_LOW}}:latest'
